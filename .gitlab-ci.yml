default:
  image: olimex/olinuxino-overlays

stages:
  - test
  - source
  - binary
  - merge
  - deploy

test:apply:
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "upstream"'
      when: always
    - if: '$CI_BUILD_REF_NAME == "upstream"'
      when: always
  script:
    - make test
  stage: test

package:source:
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/*
    when: on_success
  before_script:
    - rm -vf ../olinuxino-overlays_*.* || true
    - git checkout -B "$CI_BUILD_REF_NAME" "$CI_BUILD_REF"
    - git fetch origin +refs/heads/upstream:refs/tags/upstream
    - gbp export-orig --upstream-tree=origin/upstream
  script:
    - tar -xvf ../olinuxino-overlays*.orig.tar.gz --skip-old-files --strip 1 -C ./
    - dpkg-buildpackage --post-clean -S -i -I
    - mkdir $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA && cp -vf ../olinuxino-overlays_*.* $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/
  stage: source

package:binary:
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/*
    when: on_success
  before_script:
    - cp -v $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/* ../
    - rm -rvf $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA
  script:
    - tar -xvf ../olinuxino-overlays*.orig.tar.gz --skip-old-files --strip 1 -C ./
    - dpkg-buildpackage --post-clean --no-sign -i -I
    - mkdir $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA && cp -vf ../olinuxino-overlays_*.* $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/
  stage: binary

package:merge:
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/*
  script:
    - mergechanges -f $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/*.changes
  stage: merge

deploy:staging:
  rules:
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'
      when: manual
  script:
    - reprepro -b /var/www/html/staging include unstable $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/*_multi.changes
  stage: deploy
  tags:
    - deploy
