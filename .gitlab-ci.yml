default:
  image: olimex/olinuxino-overlays

stages:
  - test
  - build
  - deploy

test:apply:
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "upstream"'
      when: always
    - if: '$CI_BUILD_REF_NAME == "upstream"'
      when: always
  script:
    - cd test && bash bootstrap.sh
  stage: test

test:package:
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      when: always
    - if: '$CI_BUILD_REF_NAME == "master"'
      when: always
  script:
    - git checkout -B "$CI_BUILD_REF_NAME" "$CI_BUILD_REF"
    - git fetch origin +refs/heads/upstream:refs/tags/upstream
    - gbp export-orig --upstream-tree=origin/upstream
    - tar -xvf ../olinuxino-overlays*.orig.tar.gz --skip-old-files --strip 1 -C ./
    - dpkg-buildpackage --post-clean --no-sign -i -I
  stage: test

build:
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/*
    when: on_success
  only:
    - /^debian/
    - /^master/
  script:
    - git checkout -B "$CI_BUILD_REF_NAME" "$CI_BUILD_REF"
    - git fetch origin +refs/heads/upstream:refs/tags/upstream
    - gbp export-orig --upstream-tree=origin/upstream
    - tar -xvf ../olinuxino-overlays*.orig.tar.gz --skip-old-files --strip 1 -C ./
    - dpkg-buildpackage --post-clean --no-sign -i -I
    - mkdir $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA && cp -vf ../olinuxino-overlays_*.* ./$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/
  stage: build

deploy:staging:
  only:
    - /^debian/
  script:
    - reprepro -b /var/www/html/staging includedeb unstable $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/*.deb
    - reprepro -b /var/www/html/staging includedsc unstable $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/*.dsc
  stage: deploy
  tags:
    - deploy
  when: manual
