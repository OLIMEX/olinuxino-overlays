default:
  image: debian:sid

.build_kernel_dtbs: &build_kernel_dtbs
  - apt-get update && apt-get install -y bison gcc flex lftp make wget xz-utils
  - lftp -e "cls -1 > /tmp/kernel; exit" "http://cdn.kernel.org/pub/linux/kernel/v5.x/"
  - FILE=$(grep ^linux-$KERNEL.*.tar.xz /tmp/kernel | sort -V | tail -n1)
  - TARGET_DIR="$PWD/test/targets" && mkdir -p $TARGET_DIR/sun7i-a20 $TARGET_DIR/sun50i-a64
  - pushd $(mktemp -d)
  - wget https://cdn.kernel.org/pub/linux/kernel/v5.x/$FILE
  - tar xf $FILE && cd "${FILE%.*.*}"
  # Generate armhf dtbs
  - make ARCH=arm defconfig && make ARCH=arm dtbs -j$(nproc)
  - cp -vf arch/arm/boot/dts/sun7i-a20-oli*.dtb $TARGET_DIR/sun7i-a20/
  # Generate arm64 dtbs
  - make clean && make ARCH=arm64 defconfig && make ARCH=arm64 dtbs -j$(nproc)
  - cp -vf arch/arm64/boot/dts/allwinner/sun50i-a64-olinuxino*.dtb $TARGET_DIR/sun50i-a64/
  - popd

stages:
  - test
  - build

test:
  before_script:
    # Uncomment the following, to download and build latest dtbs
    # - *build_kernel_dtbs
    - apt-get update && apt-get install -y bats device-tree-compiler
  only:
    - branches
  script:
    - cd test && bash bootstrap.sh
  stage: test
  # variables:
  #   KERNEL: "5.5"

build:
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - output/*
    when: on_success
  before_script:
    - apt-get update
    - apt-get install -y --no-install-recommends build-essential debhelper-compat device-tree-compiler devscripts git git-buildpackage gnupg2
    # Unlock gpg keyring
    - gpg --no-tty --batch --yes --import $SIGN_KEY
    - echo "" | gpg2 --pinentry-mode loopback --passphrase $GPG_PASS --sign -u $GPG_USER > /dev/null
  only:
    - /^master/
  script:
    - git checkout -B "$CI_BUILD_REF_NAME" "$CI_BUILD_REF"
    - git fetch origin +refs/heads/upstream:refs/tags/upstream
    - gbp buildpackage --git-upstream-tree=upstream --git-debian-branch="$CI_BUILD_REF_NAME" --git-builder='dpkg-buildpackage --post-clean -pgpg2 -i -I'
    - mkdir output && cp -vf ../olinuxino-overlays_*.* ./output/
  stage: build
